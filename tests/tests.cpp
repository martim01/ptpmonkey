#include <iostream>
#include "ptpparser.h"
#include <initializer_list>
#define CATCH_CONFIG_MAIN
#include "catch2/catch.hpp"


using namespace std;


TEST_CASE("HANDLE Ptp Message")
{
    PtpParser ptp;

    SECTION("Handle Sync Message?")
    {
        //ptp.ParseMessage(std::vector<unsigned char>(std::initializer_list<unsigned char>{0x00,0x01,0x00,0x01,0x5f,0x44,0x46,0x4c,0x54,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x00,0x1d,0xc1,0x04,0x86,0xf2,0x00,0x01,0x18,0xa1,0x00,0x00,0x00,0x0c,0x00,0x00,0x00,0x00,0x00,0x3b,0x02,0x14,0x26,0xa4,0x38,0xdf,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x1d,0xc1,0x04,0x86,0xf2,0x00,0x00,0x18,0xa1,0x00,0x00,0x00,0x7d,0x44,0x46,0x4c,0x54,0xff,0xff,0xf0,0x60,0x00,0x01,0x00,0x01,0xff,0xff,0xff,0xfe,0xff,0xff,0xf0,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7d,0x44,0x46,0x4c,0x54,0x00,0x01,0x00,0x1d,0xc1,0x04,0x86,0xf2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}));

        ptp.ParseMessage(std::vector<unsigned char>(std::initializer_list<unsigned char>{0x00,0x02,0x00,0x2c,0x00,0x00,
0x02,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,
0xc1,0xff,0xfe,0x04,0x86,0xf2,0x00,0x02,0x18,0x9a,0x00,0xfe,0x00,0x00,0x00,0x3b,
0x02,0x14,0x26,0xac,0x7e,0xfb}));

        /*
        type=0
        version=2
        length=44
        subdomain=0
        flags = 0x208
        correction=0
        clockid = 00:1d:c1:ff:f3:04:86:f2:00:02
        sequence = 6298
        control = 0
        interval=254
        timestamp seconds = 3867156
        timestamp nanoseconds = 648838907
        */

        ptp.OutputValues();
    }
    std::cout << std::endl;

    SECTION("Handle Announce Message?")
    {
        ptp.ParseMessage(std::vector<unsigned char>(std::initializer_list<unsigned char>{0x0b,0x02,0x00,0x40,0x00,0x00,
0x02,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,
0xc1,0xff,0xfe,0x04,0x86,0xf2,0x00,0x02,0xd2,0xc5,0x05,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x77,0xf8,0xfe,0xf0,0x60,0x78,0x00,
0x1d,0xc1,0xff,0xfe,0x04,0x86,0xf2,0x00,0x00,0xa0}));

    /*
        type=11
        version=2
        length=64
        subdomain=0
        flags = 0x208
        correction=0
        clockid = 00:1d:c1:ff:fe:04:86:f2
        sequence = 53957
        control = 5
        interval=0
        timestamp seconds = 0
        timestamp nanoseconds = 0
        UTCOffset = 0
        Priority1 = 119
        Class = 248
        Accuracy = 254
        Variance = 61536
        Priority2 = 120
        clockid = 00:1d:c1:ff:fe:04:86:f2
        steps = 0
        timesource = 160
        */

        ptp.OutputValues();
    }
    std::cout << std::endl;
    SECTION("Handle follow up message?")
    {
        ptp.ParseMessage(std::vector<unsigned char>(std::initializer_list<unsigned char>{0x08,0x02,0x00,0x2c,0x00,0x00,0x02,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0xc1,0xff,0xfe,0x04,0x86,0xf2,0x00,0x02,0x18,0x98,0x02,0xfe,0x00,0x00,0x00,0x3b,0x02,0x14,0x07,0xc2,0xf9,0xb8}));
        /*
        type=11
        version=2
        length=64
        subdomain=0
        flags = 0x208
        correction=0
        sourceid = 00:1d:c1:ff:fe:04:86:f2
        sourceport = 2
        sequence = 6296
        control = 2
        interval=254
        timestamp = 3867156:130218424
        */

        ptp.OutputValues();
    }
    std::cout << std::endl;
    SECTION("Handle Delay Response?")
    {
        ptp.ParseMessage(std::vector<unsigned char>(std::initializer_list<unsigned char>{0x09,0x02,0x00,0x36,0x00,0x00,0x02,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0xc1,0xff,0xfe,0x04,0x86,0xf2,0x00,0x02,0x04,0x15,0x03,0x00,0x00,0x00,0x00,0x3b,0x02,0x14,0x1f,0xe7,0x64,0x41,0xb8,0x27,0xeb,0xff,0xfe,0x39,0xd7,0x10,0x00,0x01}));
        /*
        type=9
        version=2
        length=54
        subdomain=0
        flags = 0x208
        correction=0
        sourceid = 00:1d:c1:ff:fe:04:86:f2
        sourceport = 2
        sequence = 1045
        control = 3
        interval=0
        timestampS = 3867156
        timestampN = 535258177
        ReqId = 0b:27:3b:ff:fe:39:d7:10
        reqPort = 1
        */

        ptp.OutputValues();
    }
    std::cout << std::endl;
}

